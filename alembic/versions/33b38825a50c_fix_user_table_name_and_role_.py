"""Fix user table name and role relationship

Revision ID: 33b38825a50c
Revises: 844f298003fb
Create Date: 2025-07-10 12:05:18.031773

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '33b38825a50c'
down_revision: Union[str, Sequence[str], None] = '844f298003fb'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=50), nullable=False),
    sa.Column('fullname', sa.String(length=100), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_update', sa.Boolean(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_fullname'), 'users', ['fullname'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.drop_index(op.f('ix_roles_email'), table_name='roles')
    op.drop_index(op.f('ix_roles_fullname'), table_name='roles')
    op.drop_index(op.f('ix_roles_username'), table_name='roles')
    op.drop_constraint(op.f('roles_ibfk_1'), 'roles', type_='foreignkey')
    op.drop_column('roles', 'hashed_password')
    op.drop_column('roles', 'username')
    op.drop_column('roles', 'fullname')
    op.drop_column('roles', 'is_update')
    op.drop_column('roles', 'email')
    op.drop_column('roles', 'role_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('roles', sa.Column('role_id', mysql.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('roles', sa.Column('email', mysql.VARCHAR(length=50), nullable=False))
    op.add_column('roles', sa.Column('is_update', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True))
    op.add_column('roles', sa.Column('fullname', mysql.VARCHAR(length=100), nullable=False))
    op.add_column('roles', sa.Column('username', mysql.VARCHAR(length=50), nullable=False))
    op.add_column('roles', sa.Column('hashed_password', mysql.VARCHAR(length=255), nullable=False))
    op.create_foreign_key(op.f('roles_ibfk_1'), 'roles', 'roles', ['role_id'], ['id'])
    op.create_index(op.f('ix_roles_username'), 'roles', ['username'], unique=True)
    op.create_index(op.f('ix_roles_fullname'), 'roles', ['fullname'], unique=True)
    op.create_index(op.f('ix_roles_email'), 'roles', ['email'], unique=True)
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_fullname'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
